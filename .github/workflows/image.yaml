name: Dockerization and Deployment
on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
    - 'master'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref	 }}
  cancel-in-progress: true
jobs:
  get-env-tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4 
      with:
        fetch-tags: true
        fetch-depth: 0
    - name: Get Image Tag
      id: env-tag
      run : |
        CURRENT_VERSION=$(cat VERSION)
        BRANCH_NAME="master"
        if [[ ${{ github.event_name }} == "pull_request" ]]
        then 
          BRANCH_NAME=$( echo ${{ github.event.pull_request.head.ref }} | tr "/" "-" )
          TAG=$BRANCH_NAME-$CURRENT_VERSION
        elif [[ ${{ github.ref_name }} == "master" ]]
        then 
          TAG=$CURRENT_VERSION-${GITHUB_SHA::8}
        else
        fi
        echo "IMAGE_TAG=$TAG" >> "$GITHUB_OUTPUT"

    outputs:
      image-tag: ${{ steps.env-tag.outputs.IMAGE_TAG }}
  build-and-push:
    uses: ./.github/workflows/docker-reuse.yaml
    secrets: inherit
    needs:
    - get-env-tag
    with:
      push: true
      tag: ${{ needs.get-env-tag.outputs.image-tag }}
      image-name: test-github-action
  stage-deploy:
    if: ${{ github.event_name	 == 'pull_request'   }}
    permissions:
      id-token: write   # This is required for requesting the JWT
      issues: write
    environment: dev
    runs-on: ubuntu-latest
    needs:
    - build-and-push
    - get-env-tag
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::464498973176:role/github-action-sysadmin
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
    - name: Configure Kubernetes client
      uses: silverlyra/setup-aws-eks@v0.1
      with:
        cluster: ${{vars.EKS_CLUSTER_NAME}}
    - name: Deployment
      run: |
        helm upgrade --install test-github-action-${{ needs.get-env-tag.outputs.image-tag }} ./charts/test-github-action \
        --namespace dev \
        --set ingress.hostName="test-github-action-${{ needs.get-env-tag.outputs.image-tag }}" \
        --set ingress.environment="dev" \
        --set ingress.annotations."alb\.ingress\.kubernetes\.io/certificate-arn"="${{vars.CERTIFICATE_ARN}}" \
        --set image.tag="${{ needs.get-env-tag.outputs.image-tag }}" \
        --wait

  update-pull-request:
    if: ${{ github.event_name	 == 'pull_request'   }}
    needs:
    - stage-deploy
    - get-env-tag
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - name: Update Pull Request
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number:  ${{github.event.number}},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body:  `PR ${{github.event.number}} Deployment is ${{job.status}}
                    URL is https://test-github-action-${{needs.get-env-tag.outputs.image-tag}}.dev.titanium-me.info
                    Thank You`
          })
