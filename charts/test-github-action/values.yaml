nameOverride: ""
fullnameOverride: ""
image:
  repository: mohamedhani/test-github-action
  pullPolicy: Always
  tag: ""
imagePullSecrets: 
- name: dockerhub-regcred

replicaCount: 1


podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations: 
    alb.ingress.kubernetes.io/load-balancer-name: project-alb
    alb.ingress.kubernetes.io/group.name: project-group
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: '/healthz'
    alb.ingress.kubernetes.io/healthcheck-protocol: 'HTTP'
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:us-east-1:464498973176:certificate/35bb1313-7fdb-4c04-904d-17364af08684'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=true
    external-dns.alpha.kubernetes.io/ttl: "60"
  hostName: ""
  domain: "home.titanium-me.info"
  # environment should be dev, preprod, or prod
  environment: ""
 # secretName: """
    

resources: 
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http



# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
